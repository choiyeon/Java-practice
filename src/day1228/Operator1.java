/*
최 단(항)산(술)쉬(프트) 관(계)(논)리 삼(항)대(입) 콤마
단항 - 연산에 필요한 항이 하나인 연산자
~, !, +, -, ++, --
*/
package day1228;

class Operator1{
	public static void main(String[] args){
		/*
		~:tilde -1의 보수 연산
		<~양수 : 부호변경 1증가, ~음수 : 부호변경 1감소>
		~12 => -13
		~-13 => 12
		*/

		int i=10, j=-10;
		System.out.println("~" + i + "=" + ~i);//-11
		System.out.println("~" + j + "=" + ~j);//9

		//~를 사용하여 부호만 변경하고 싶다. -10만들기
		System.out.println("-10 만들기 : " + (~i+1));
///////////////////////////////////////////////////////////////////////////////////////////////////////////
		/*
		! : not - true => false / false => true 변경
		true나 false 앞에만 사용가능
		!(3>4) : true
		*/

		i = 12;
		j = 28;
		System.out.println(!(i < j));//!은 true, false 앞에서만 정의가능
		System.out.println(i + "<" + j + "=" + (!(i < j)));

		boolean flag1=true, flag2=false;
		System.out.println("!" + flag1 + "=" + !flag2);
//////////////////////////////////////////////////////////////////////////////////////////////////////////
		/*
		+ : 형식적인 제공
		+9 = 9
		+-9 = -9

		- : 값은 그대로, 부호만 바꿈
		*/

		i = 12;
		j = -12;
		System.out.println("-" + i + "=" + -i);
		System.out.println("-" + j + "=" + -j);
//////////////////////////////////////////////////////////////////////////////////////////////////////////
		/*
		++ : 증가연산
		-- : 감소연산

		변수에만 사용가능.
		단독으로 사용되면, 대상체의 값을 1씩 증가 또는 1씩 감소시킴

		전위연산 : 연산자&대상체
				연산자&대상체 : 후위연산
		
		int i = 100;
		++i//101
		i++//102
		*/

		i = 5;
		j = 10;
		System.out.println("설정된 값: " + i + ", " + j);

		++i;//전위연산 5->6
		--j;//전위연산 10->9
		++i;//전위연산 6->7
		--j;//전위연산 9->8
		System.out.println("전위연산 후: " + i + ", " + j);

		i++;//후위연산 7->8
		j--;//후위연산 8->7
		System.out.println("후위연산 후: " + i + ", " + j);
/////////////////////////////////////////////////////////////////////////////////////////////
		/*
		대입연산자와 함께 사용되면 전위와 후위는 다른 값을 대입해준다.
		전위 : 단항 먼저(증가, 감소 연산 후 대입)
		후위 : 대입 먼저(대입 후 증가, 감소 연산)

		int i = 12;
		int result = 0;

		result = ++i
		*/

		//전위와 후위는 대입연산과 함께 사용되며 각자 다른 값을 대입한다.
		i = 10;
		int result = 0;
		//전위 연산 : 단항을 수행 후 대입 수행
		result = ++i;
		System.out.println("전위 후 : result : " + result + ", i : " + i);

		i = 10;
		//후위연산 : 남의 것 먼저(대입 후 단항에 수행)
		result = i++;
		System.out.println("후위 후 : result : " + result + ", i : " + i);

		i=10;
		j=10;
		System.out.println("전위 : " + ++i + " 후위 : " + j++);
		System.out.println("method 호출 후 i : " + i + " , j : " + j);//할당 후

	}//main
}//class
